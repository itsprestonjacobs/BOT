import discord
from discord.ext import commands
import json
import os

intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)

# Load or initialize blacklists and role blacklists
blacklist_path = 'blacklist.json'
role_blacklist_path = 'role_blacklist.json'

if os.path.exists(blacklist_path):
    with open(blacklist_path, 'r') as f:
        blacklist = json.load(f)
else:
    blacklist = []

if os.path.exists(role_blacklist_path):
    with open(role_blacklist_path, 'r') as f:
        role_blacklist = json.load(f)
else:
    role_blacklist = []

def save_blacklist():
    with open(blacklist_path, 'w') as f:
        json.dump(blacklist, f)

def save_role_blacklist():
    with open(role_blacklist_path, 'w') as f:
        json.dump(role_blacklist, f)

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')

@bot.command()
@commands.has_permissions(administrator=True)
async def blacklist(ctx, action: str, user_id: int):
    """Add or remove a user from the blacklist."""
    if action == 'add':
        if user_id not in blacklist:
            blacklist.append(user_id)
            save_blacklist()
            await ctx.send(f'User {user_id} added to the blacklist.')
        else:
            await ctx.send('User is already blacklisted.')
    elif action == 'remove':
        if user_id in blacklist:
            blacklist.remove(user_id)
            save_blacklist()
            await ctx.send(f'User {user_id} removed from the blacklist.')
        else:
            await ctx.send('User is not in the blacklist.')
    else:
        await ctx.send('Invalid action. Use `add` or `remove`.')

@bot.command()
@commands.has_permissions(administrator=True)
async def role_blacklist(ctx, action: str, role_id: int):
    """Add or remove a role from the role blacklist."""
    if action == 'add':
        if role_id not in role_blacklist:
            role_blacklist.append(role_id)
            save_role_blacklist()
            await ctx.send(f'Role {role_id} added to the blacklist.')
        else:
            await ctx.send('Role is already blacklisted.')
    elif action == 'remove':
        if role_id in role_blacklist:
            role_blacklist.remove(role_id)
            save_role_blacklist()
            await ctx.send(f'Role {role_id} removed from the blacklist.')
        else:
            await ctx.send('Role is not in the blacklist.')
    else:
        await ctx.send('Invalid action. Use `add` or `remove`.')

@bot.event
async def on_message(message):
    # Prevent bot from responding to its own messages
    if message.author == bot.user:
        return

    # Handle DM messages
    if isinstance(message.channel, discord.DMChannel):
        if message.author.id not in blacklist:
            modmail_channel = bot.get_channel(MODMAIL_CHANNEL_ID)  # Replace with your modmail channel ID
            if modmail_channel:
                await modmail_channel.send(f'Modmail from {message.author}: {message.content}')
        else:
            await message.channel.send('You are blacklisted and cannot send messages.')

    # Handle role ping blacklist
    if message.mentions.roles:
        mentioned_roles = [role.id for role in message.mentions.roles]
        if any(role_id in role_blacklist for role_id in mentioned_roles):
            await message.delete()
            await message.channel.send(f'{message.author.mention}, you cannot ping these roles.')

    await bot.process_commands(message)

bot.run('YOUR_BOT_TOKEN_HERE')
